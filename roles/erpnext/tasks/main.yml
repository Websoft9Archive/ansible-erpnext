- name: Delete erpnext dir for sec_installation
  shell: rm -rf /data/wwwroot/erpnext

- name: Create dir for erpnext
  file: 
    state: directory
    path: "{{item}}"
  loop: 
    - /data/wwwroot/erpnext
    - /data/db/mariadb
    - /data/db/redis
    
- name: Clone erpnext in Websoft9 
  git:
    repo: "{{erpnext_git_url}}"
    dest: "/data/wwwroot/erpnext"
    version: dev

- name: Modify the selected version
  shell: |
    sed -i 's/ERPNEXT_VERSION=.*/ERPNEXT_VERSION=v{{erpnext_version}}/g' /data/wwwroot/erpnext/env-production.env
    sed -i 's/FRAPPE_VERSION=.*/FRAPPE_VERSION=v{{erpnext_version}}/g' /data/wwwroot/erpnext/env-production.env

- name: Run docker-compose 
  shell: | 
    docker-compose up -d
    sleep 30
  args:
    chdir: /data/wwwroot/erpnext/erpnext-server

- name: Set soft link for erpnext
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
    force: yes
  with_items:
  - {src: /data/wwwroot/erpnext/mariadb-vol/,dest: /data/db/mariadb/data}
  - {src: /data/wwwroot/erpnext/installation/frappe-mariadb.cnf,dest: /data/db/mariadb/frappe-mariadb.cnf}
  - {src: /data/wwwroot/erpnext/installation/frappe-mariadb.cnf,dest: /data/config/frappe-mariadb.cnf}
  - {src: /data/wwwroot/erpnext/redis-socketio-vol/,dest: /data/db/redis/socketio}
  - {src: /data/wwwroot/erpnext/redis-queue-vol/,dest: /data/db/redis/queue}
  - {src: /data/wwwroot/erpnext/redis-cache-vol/,dest: /data/db/redis/cache}
  - {src: /data/wwwroot/erpnext/logs-vol/,dest: /data/logs/erpnext}

# check service and version
- name: Copy check service script
  copy:
    src: check_dockerapp_service.sh
    dest: /tmp/check_dockerapp_service.sh

- name: Check erpnext service 
  shell: bash /tmp/check_dockerapp_service.sh
  register: check_erpnext_service
  notify: check_erpnext_service
    
- name: Check erpnext version
  shell: >
    sudo echo "erpnext version:" $(docker images |grep frappe/frappe-socketio |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  

- name: Check mariadb version
  shell: >
    sudo echo "mariadb version:" $(docker images |grep mariadb |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  

- name: Check redis version
  shell: >
    sudo echo "redis version:" $(docker inspect redis:latest |grep REDIS_VERSION |head -1 |cut -d= -f2) |sudo tee -a /data/logs/install_version.txt 

- name: Check nginx version
  shell: >
    sudo echo "nginx version:" $(docker images |grep mariadb |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt 